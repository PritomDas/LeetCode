Complexity analysis

Time complexity: O(n)
where n is the length of the input string
The algorithm needs to iterate through the string, for each character in the string, it needs to check five times if character equals one of the characters in d. O(n*5) = O(n)
Space complexity: O(n^2)
where n is the length of the input string
The algorithm needs to rebuild a string and a list.
In python,string is immutable, means that you cannot change the object itself. Each time we append res, we create a new res.
In the worst case, there are no vowels in the input string. So the res string will be the same as the input string. The space for res would be 1 + 2 + 3 + ...+ n = 1/2*(1+n)*n , i,e. O(n^2)
And a list to store vowels, which it's length is 5. O(n^2+5) = O(n^2)
